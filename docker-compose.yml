version: "3.8"

services:
    mysql:
        image: mysql:8.0.21
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            WORDPRESS_DATABASE: ${WORDPRESS_DATABASE}
            YOURLS_DATABASE: ${YOURLS_DATABASE}
        volumes:
            - ./mysql/data:/var/lib/mysql
            - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    postgres:
        image: postgres:12.4-alpine
        restart: always
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
    mongo:
        image: mongo:4.2.9-bionic
        ports:
            - 27017:27017
        volumes:
            - ./mongo/data:/data/db
    redis:
        image: redis:6.0.7-alpine
        restart: always
        ports:
            - 6379:6379
            - 16379:16379
        volumes:
            - ./redis/data:/data
    wordpress:
        image: wordpress:5.6.2-php7.3-fpm-alpine
        restart: always
        depends_on:
            - mysql
        ports:
            - 9000:9000
        environment:
            WORDPRESS_DB_HOST: mysql
            WORDPRESS_DB_USER: ${MYSQL_USER}
            WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
            WORDPRESS_DB_NAME: ${WORDPRESS_DATABASE}
            AWS_S3_KEY_ID: ${AWS_S3_KEY_ID}
            AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
        volumes:
            - /var/www/wordpress:/var/www/html
    redbot: # Don`t set restart: always
        image: docker.pkg.github.com/park9eon/red-discordbot-docker/redbot:latest
        depends_on:
            - postgres
        network_mode: host  # use socket
        environment:
            REDBOT_NAME: redbot
            REDBOT_STORAGE_TYPE: POSTGRES
            REDBOT_TOKEN: ${DISCORD_TOKEN}
            REDBOT_PREFIX: ${REDBOT_PREFIX}
            REDBOT_DB_HOST: localhost
            REDBOT_DB_USER: ${POSTGRES_USER}
            REDBOT_DB_PASS: ${POSTGRES_PASSWORD}
            REDBOT_DB_NAME: ${POSTGRES_DB}
    rssbot: # Don`t set restart: always
        image: synzen/monitorss
        depends_on:
            - mongo
            - redis
        network_mode: host # use socket
        environment:
            DRSS_START: bot-web
            MONGODB_URI: mongodb://localhost:27017/${RSSBOT_DATABASE}
            REDIS_URL: redis://localhost:6379
            DRSS_BOT_TOKEN: ${DISCORD_TOKEN}
            DRSS_BOT_PREFIX: ${RSSBOT_PREFIX}
            DRSS_BOT_OWNERIDS: ${RSSBOT_OWNERIDS}
            DRSSWEB_BOT_TOKEN: ${DISCORD_TOKEN}
            DRSSWEB_HTTP_PORT: ${RSSBOT_PORT}
            DRSSWEB_BOT_REDIRECTURI: ${DISCORD_REDIRECT_URI}
            DRSSWEB_BOT_CLIENTID: ${DISCORD_CLIENT_ID}
            DRSSWEB_BOT_CLIENTSECRET: ${DISCORD_CLIENT_SECRET}
